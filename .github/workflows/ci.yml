name: CI

on:
  push:
    branches:
      - "**"
  pull_request:

jobs:
  docker-compose-test:
    name: Docker Compose Test
    runs-on: ubuntu-latest
    #needs: integration-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Build and Run "Docker Compose"
        working-directory: deployments
        run: |
          docker-compose -f docker-compose-way1.yml build
          docker-compose -f docker-compose-way1.yml up
      - name: Build Go client
        run: go build -o main cmd/client/main.go
      - name: Wait for services to be ready
        run: sleep 15
      - name: Try send test of lua example
        run: ./main -file lua-examples/factorial.lua
      - name: Show container status
        run: docker ps -a
      - name: Print logs
        run: |
          docker-compose -f deployments/docker-compose-way1.yml logs
      - name: Shutdown containers
        if: always()
        working-directory: deployments
        run: docker-compose -f docker-compose-way1.yml down

  terraform-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - name: Build client part of Go file
        run: go build cmd/client/main.go
      - name: Initialize Terraform
        working-directory: terraform-local
        run: terraform init
      - name: Terraform Apply
        working-directory: terraform-local
        run: find .terraform -type f -exec chmod +x {} \; &&
             terraform apply -auto-approve
      - name: Wait for RabbitMQ to be healthy
        run: |
          echo "Waiting for RabbitMQ to be healthy..."
          for i in {1..20}; do
            if docker exec rabbitmq rabbitmq-diagnostics -q check_port_connectivity; then
              echo "RabbitMQ is healthy."
              break
            fi
            echo "Waiting..."
            sleep 5
          done
      - name: List running containers
        run: |
          docker ps -a
      - name: Print logs of scheduler and workers
        run: |
          docker ps
          docker logs scheduler || true
          docker logs worker-0 || true
          docker logs worker-1 || true
          docker logs rabbitmq || true
      - name: Wait for workers to register
        run: |
          echo "Waiting for workers to register with RabbitMQ..."
          sleep 15
      - name: Try to send task to system
        run: |
          echo "Checking Scheduler service health"
          sleep 10
          ./main -file lua-examples/factorial.lua || echo "Schechuler does not work"
      - name: List running containers
        run: docker ps
      - name: Terraform Destroy
        if: always()
        working-directory: terraform-local
        run: terraform destroy -auto-approve
            
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Run unit tests
        run: |
          docker-compose -f deployments/docker-compose.yml up --build --abort-on-container-exit

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Run integration test
        run: |
          set +e
          docker-compose -f deployments/docker-compose.integration.yml up --build --abort-on-container-exit
          EXIT_CODE=$?
          if [ "$EXIT_CODE" = "143" ]; then
            echo "Exited with 143 (SIGTERM) â€” treating as success"
            exit 0
          fi
          exit $EXIT_CODE
